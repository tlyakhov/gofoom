// Code generated by "enumer -type=CollisionResponse -json"; DO NOT EDIT.

package core

import (
	"encoding/json"
	"fmt"
)

const _CollisionResponseName = "SlideBounceStopRemoveCallback"

var _CollisionResponseIndex = [...]uint8{0, 5, 11, 15, 21, 29}

func (i CollisionResponse) String() string {
	if i < 0 || i >= CollisionResponse(len(_CollisionResponseIndex)-1) {
		return fmt.Sprintf("CollisionResponse(%d)", i)
	}
	return _CollisionResponseName[_CollisionResponseIndex[i]:_CollisionResponseIndex[i+1]]
}

var _CollisionResponseValues = []CollisionResponse{0, 1, 2, 3, 4}

var _CollisionResponseNameToValueMap = map[string]CollisionResponse{
	_CollisionResponseName[0:5]:   0,
	_CollisionResponseName[5:11]:  1,
	_CollisionResponseName[11:15]: 2,
	_CollisionResponseName[15:21]: 3,
	_CollisionResponseName[21:29]: 4,
}

// CollisionResponseString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func CollisionResponseString(s string) (CollisionResponse, error) {
	if val, ok := _CollisionResponseNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CollisionResponse values", s)
}

// CollisionResponseValues returns all values of the enum
func CollisionResponseValues() []CollisionResponse {
	return _CollisionResponseValues
}

// IsACollisionResponse returns "true" if the value is listed in the enum definition. "false" otherwise
func (i CollisionResponse) IsACollisionResponse() bool {
	for _, v := range _CollisionResponseValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for CollisionResponse
func (i CollisionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for CollisionResponse
func (i *CollisionResponse) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CollisionResponse should be a string, got %s", data)
	}

	var err error
	*i, err = CollisionResponseString(s)
	return err
}
